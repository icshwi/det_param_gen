#
0 MSG  *** Ring topology ***
1 MSG  Ring number:     00 01 02 03 04 05 06 07 08 09 10 11 
2 MSG  Number of nodes: 00 00 01 00 00 00 00 00 00 00 00 00 
#
3 MSG  Check board has emerged from reset
4 AGET M SRST 0x00000000
#
5 MSG  Power-down all CPLLS
6 SET M PDPL 0xFFFFFFFF
7 AGET M PDPL 0xFFFFFFFF
8 MSG  Power up CPPLs
9 SET M PDPL 0xFFFFFFCF
10 AGET M PDPL 0xFFFFFFCF
11 Reset all GTYs
12 SET M RGTY 0xFFFFFFFF
13 AGET M RGTY 0xFFFFFFFF
14 MSG  Power up GTYs
15 SET M RGTY 0xFFFFFFCF
16 AGET M RGTY 0xFFFFFFCF
17 MSG Check reset ctl sees GTYs out of rst
18 AGET M RTXD 0x00000030
19 AGET M RRXD 0x00000030
#
20 MSG  Put all TX engines into TXIDLEs state
21 SET M TNS00 0x00000000
22 SET M TNS01 0x00000000
23 SET M TNS02 0x00000000
24 MSG  Check status of all TX engines
25 AGET M TCS00 0x00000000
26 AGET M TCS01 0x00000000
27 AGET M TCS02 0x00000000
28 MSG  Check status of all TX engines
29 AGET M TS00 0xDEADBEEF
30 AGET M TS01 0xDEADBEEF
31 AGET M TS02 0xDEADBEEF
#
32 MSG  Put all RX engines into RXIDLE state
33 SET M RNS00 0x00000000
34 SET M RNS01 0x00000000
35 SET M RNS02 0x00000000
36 MSG  Check status of all RX engines
37 AGET M RNS00 0x00000000
38 AGET M RNS01 0x00000000
39 AGET M RNS02 0x00000000
#
40 MSG  Instruct relevant state machine to move to bring up
41 SET M TNS00 0x00010000
42 AGET M TNS00 0x00010000
#
43 MSG  Restart clock correction by asserting rx pll and datapath reset 
44 SET M RSRX 0x00000010
45 MSG  de-assert rx pll and datapath reset 
46 SET M RSRX 0x00000000
#
47 MSG  Set up the master tyml (low bytes) register
48 SET M TYML 0x01010101
49 AGET M TYML 0x01010101
50 MSG  Set up the master tymh (high bytes) register
51 SET M TYMH 0xCAFE0000
52 AGET M TYMH 0xCAFE0000
53 MSG  Simulate arrival of a strobe
54 SET M LDST 0x00000001
55 SET M LDST 0x00000000
56 MSG  Check time is counting
57 GET M MS04
58 GET M MS05
#
59 MSG  Check relevant snapshot registers
60 MSG  Both registers must be 0x959595BC
61 MSG  Polling TS04 and RS04
62 PGET M TS04 0x959595BC
63 PGET M RS04 0x959595BC
#
#
64 MSG  Set-up slow control on ring
65 MSG  Use lower xcvr for initial set up.
66 SET M TDIR 0x00000000
#
67 MSG  Instruct relevant state machine to move to slow control
68 SET M TNS00 0x00020000
69 AGET M TNS00 0x00020000
70 SET M RNS00 0x00020000
71 AGET M RNS00 0x00020000
72 MSG  Test slow control by reading VERS register
73 GET S VERS_SLV_2_0
74 MSG  Also see which ring (CW/CCW) was selected for clock recovery
75 GET S CSEL_SLV_2_0
76 MSG  Name slave
77 SET S NDID_SLV_2_0 0x00000001
78 MSG  Check newly named slave exists
79 GET S VERS_SLV_2_1
#
80 MSG  Measure ToF using STME_SLV_2_1 TM04 RM04
81 TSET X STME_SLV_2_1 TM04 RM04
#
82 MSG  Close ring on final node.
83 SET M TNS00 0x00120000
#
84 MSG  Restart clock correction by asserting rx pll and datapath reset 
85 SET M RSRX 0x00000020
86 MSG  de-assert rx pll and datapath reset 
87 SET M RSRX 0x00000000
#
88 MSG  Check relevant snapshot registers
89 MSG  Both registers must be 0x959595BC
90 MSG  Polling TS05 and RS05
91 PGET M TS05 0x959595BC
92 PGET M RS05 0x959595BC
#
93 MSG  Can now reverse slave interconnect to forward traffic to next node
94 SET S RVSR_SLV_2_1 0x00000000
95 MSG  Node set up complete!
96 SET M RNS00 0x00220000
97 MSG  Ring set up complete!
#
98 MSG  Check presence of all nodes:
99 MSG  Ring 2
100 MSG  Node 1
101 GET S NDID_SLV_2_1
#
102 MSG  Check all timestamps:
103 GET M MS04
104 GET M MS05
105 GET S TMSP_SLV_2_1
#
106 MSG  Tell both rings to launch bulk data packets for all nodes
107 SET M MN04 0x00000101
108 SET M MN05 0x00000101
109 SET M TNS00 0x00220000
110 MSG  System set up complete!
